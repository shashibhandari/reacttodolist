{"ast":null,"code":"import _slicedToArray from \"E:\\\\React Project\\\\ReactCrashTodo\\\\reactcrashtodo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React Project\\\\ReactCrashTodo\\\\reactcrashtodo\\\\src\\\\App.js\";\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport Todos from './components/Todos';\n\nfunction App() {\n  //const [todos, setTodos] = useState([{id:1,name:'Todo 1', complete:false, id:2,name:'Todo 2',complete:true}])\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n  /* this.state = {\n     todos: [\n         {\n           id: 1,\n           title: 'Tell a tale about a tail',\n           completed: false\n         },\n         {\n           id: 2,\n           title: 'Give Presentation',\n           completed: false\n         },\n         {\n           id: 3,\n           title: 'Wait for response',\n           completed: false\n         },\n     ]\n   }\n   console.log(this.state.todos)*/\n\n\n  const todoNameRef = useRef();\n\n  function addTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    todoNameRef.current.value = null;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Todos, {\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    ref: todoNameRef,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add Todo\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear Complete\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" 0 left to do\"));\n}\n\nexport default App;","map":{"version":3,"sources":["E:\\React Project\\ReactCrashTodo\\reactcrashtodo\\src\\App.js"],"names":["React","useState","useRef","Todos","App","todos","setTodos","todoNameRef","addTodo","e","name","current","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,GAAe;AACb;AADa,oBAEeH,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEJI,KAFI;AAAA,QAEGC,QAFH;AAGd;;;;;;;;;;;;;;;;;;;;;;AAoBD,QAAMC,WAAW,GAAGL,MAAM,EAA1B;;AACC,WAASM,OAAT,CAAiBC,CAAjB,EAAoB;AACrB,UAAMC,IAAI,GAAGH,WAAW,CAACI,OAAZ,CAAoBC,KAAjC;AACK,QAAGF,IAAI,KAAK,EAAZ,EAAgB;AAChBH,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACH;;AACA,SACE,0CACG,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEA;AAAO,IAAA,GAAG,EAAEE,WAAZ;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALA,CADF;AASD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, {useState,useRef} from 'react';\nimport './App.css';\nimport Todos from './components/Todos'\n\nfunction App() {\n  //const [todos, setTodos] = useState([{id:1,name:'Todo 1', complete:false, id:2,name:'Todo 2',complete:true}])\n    const [todos, setTodos] = useState([])\n /* this.state = {\n    todos: [\n        {\n          id: 1,\n          title: 'Tell a tale about a tail',\n          completed: false\n        },\n        {\n          id: 2,\n          title: 'Give Presentation',\n          completed: false\n        },\n        {\n          id: 3,\n          title: 'Wait for response',\n          completed: false\n        },\n    ]\n  }\n  console.log(this.state.todos)*/\nconst todoNameRef = useRef()\n function addTodo(e) {\nconst name = todoNameRef.current.value\n     if(name === '') return\n     todoNameRef.current.value = null;\n }\n  return (\n    <>\n       <Todos todos={todos}/>\n    <input ref={todoNameRef} type=\"text\" />\n    <button onClick={addTodo}>Add Todo</button>\n    <button>Clear Complete</button>\n    <div> 0 left to do</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}